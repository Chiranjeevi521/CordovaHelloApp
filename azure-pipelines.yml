trigger:
- master

pool:
  vmImage: 'macos-latest'

steps:
- task: NodeTool@0
  inputs:
    versionSpec: '10.x'
  displayName: 'Install Node.js'

- task: DownloadSecureFile@1
  name: P12Certificate
  displayName: 'Download P12 Secure Certificate'
  inputs:
    secureFile: 'Certificates.p12'

- task: DownloadSecureFile@1
  name: ProvisionCertificate
  displayName: 'Download Mobile Provision Certificate'
  inputs:
    secureFile: 'xcode10.mobileprovision'

- task: InstallAppleCertificate@2
  inputs:
    certSecureFile: 'Certificates.p12'
    certPwd: 'secret'
    keychain: 'temp'
  displayName: 'Installation of P12 Certificate'

- task: InstallAppleProvisioningProfile@1
  inputs:
    provisioningProfileLocation: 'secureFiles'
    provProfileSecureFile: 'xcode10.mobileprovision'
  displayName: 'Installation Provisioning Profile'

- script: |
    npm install
  displayName: 'npm install and build'

- script: |
    npm install -g cordova@8.1.2
    cordova platform add android@7.1.1
  displayName: 'Installation of cordova and Android platform'

- script: |
    cordova build android --release
    cordova build android --debug
  displayName: 'Generating Android Apps'

- task: AndroidSigning@3
  inputs:
    apkFiles: '**/*signed.apk'
    apksignerKeystoreFile: 'debug.keystore'
    apksignerKeystorePassword: 'android'
    apksignerKeystoreAlias: 'androiddebugkey'
    apksignerKeyPassword: 'android'

- task: CopyFiles@2
  inputs:
    SourceFolder: '$(Agent.BuildDirectory)'
    Contents: '**/*.apk'
    TargetFolder: '$(Build.ArtifactStagingDirectory)'
    CleanTargetFolder: true
    overWrite: false
    flattenFolders: false
    preserveTimestamp: true
  displayName: 'Copying Android App as Artifact'

- script: |
    cordova platform add ios@5.0.0
  displayName: 'Adding IOS Platoform'

- script: |
    cordova build ios --release --device --buildFlag='-UseModernBuildSystem=0'
  displayName: 'Generating IOS App'

- task: CmdLine@2
  inputs:
    script: 'rm -f $(Agent.WorkFolder)/platforms/ios/build/device/HelloWorld.app'

- task: CopyFiles@2
  inputs:
    SourceFolder: '$(Agent.WorkFolder)'
    Contents: 'platforms/ios/build/device/HelloWorld.ipa'
    TargetFolder: '$(Build.ArtifactStagingDirectory)'
    CleanTargetFolder: false
    overWrite: false
    flattenFolders: false
    preserveTimestamp: true
  displayName: 'Copying IOS IPA as Artifact'

- task: PublishBuildArtifacts@1
  inputs:
    pathtoPublish: '$(Build.ArtifactStagingDirectory)'
    artifactName: 'MobileApps'
    artifactType: 'container'